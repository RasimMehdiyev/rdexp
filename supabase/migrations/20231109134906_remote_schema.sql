
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE OR REPLACE FUNCTION "public"."addCoach"("fullname" "text", "password" "text", "email" "text", "team" bigint) RETURNS "void"
    LANGUAGE "sql"
    AS $_$    insert into "Coach" ("fullName", "password", "email", "team") values ($1, $2, $3, $4);$_$;

ALTER FUNCTION "public"."addCoach"("fullname" "text", "password" "text", "email" "text", "team" bigint) OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."add_player"("fullname" "text", "password" "text", "email" "text", "team" integer, "phonenumber" "text") RETURNS "void"
    LANGUAGE "sql"
    AS $_$insert into "Player" ("fullName", "password", "email", "team","phoneNumber") values ($1, $2, $3, $4, $5);
$_$;

ALTER FUNCTION "public"."add_player"("fullname" "text", "password" "text", "email" "text", "team" integer, "phonenumber" "text") OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."addplayer"("fullname" character varying, "password" integer, "email" character varying, "team" integer) RETURNS "void"
    LANGUAGE "sql"
    AS $_$
    insert into "Player" ("fullName", "password", "email", "team") values ($1, $2, $3, $4);
$_$;

ALTER FUNCTION "public"."addplayer"("fullname" character varying, "password" integer, "email" character varying, "team" integer) OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."getcoach"("id" bigint) RETURNS "json"
    LANGUAGE "sql"
    AS $_$
  select row_to_json(row) from (
    select * from "Coach"
    where id = $1
  ) row;
$_$;

ALTER FUNCTION "public"."getcoach"("id" bigint) OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."getcoaches"() RETURNS "json"
    LANGUAGE "sql"
    AS $$
  select json_agg(row_to_json(row)) from (
        select * from "Coach"
  ) row;
$$;

ALTER FUNCTION "public"."getcoaches"() OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."getplayer"("id" bigint) RETURNS "json"
    LANGUAGE "sql"
    AS $_$
  select row_to_json(row) from (
    select * from "Player"
    where id = $1
  ) row;
$_$;

ALTER FUNCTION "public"."getplayer"("id" bigint) OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."getplayers"() RETURNS "json"
    LANGUAGE "sql"
    AS $$
  select json_agg(row_to_json(row)) from (
        select * from "Player"
  ) row;
$$;

ALTER FUNCTION "public"."getplayers"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."Coach" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "fullName" "text" NOT NULL,
    "phoneNumber" "text",
    "email" "text" NOT NULL,
    "team" bigint,
    "password" "text",
    "bio" "text",
    "userID" "text",
    "profilePicture" "text"
);

ALTER TABLE "public"."Coach" OWNER TO "postgres";

ALTER TABLE "public"."Coach" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Coach_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Player" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "fullName" "text" NOT NULL,
    "email" "text" NOT NULL,
    "phoneNumber" "text",
    "team" bigint,
    "password" "text",
    "bio" "text",
    "userID" "text",
    CONSTRAINT "reg_users_email_check" CHECK (("length"("email") < 500)),
    CONSTRAINT "reg_users_username_check" CHECK (("length"("fullName") < 32))
);

ALTER TABLE "public"."Player" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."Team" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "teamName" "text",
    "ranking" smallint
);

ALTER TABLE "public"."Team" OWNER TO "postgres";

ALTER TABLE "public"."Team" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Team_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."Player" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."reg_users_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."Coach"
    ADD CONSTRAINT "Coach_email_key" UNIQUE ("email");

ALTER TABLE ONLY "public"."Coach"
    ADD CONSTRAINT "Coach_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Player"
    ADD CONSTRAINT "Player_phoneNumber_key" UNIQUE ("phoneNumber");

ALTER TABLE ONLY "public"."Team"
    ADD CONSTRAINT "Team_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Player"
    ADD CONSTRAINT "reg_users_email_key" UNIQUE ("email");

ALTER TABLE ONLY "public"."Player"
    ADD CONSTRAINT "reg_users_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Player"
    ADD CONSTRAINT "reg_users_username_key" UNIQUE ("fullName");

ALTER TABLE ONLY "public"."Coach"
    ADD CONSTRAINT "Coach_team_fkey" FOREIGN KEY ("team") REFERENCES "public"."Team"("id");

ALTER TABLE ONLY "public"."Player"
    ADD CONSTRAINT "Player_team_fkey" FOREIGN KEY ("team") REFERENCES "public"."Team"("id");

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON FUNCTION "public"."addCoach"("fullname" "text", "password" "text", "email" "text", "team" bigint) TO "anon";
GRANT ALL ON FUNCTION "public"."addCoach"("fullname" "text", "password" "text", "email" "text", "team" bigint) TO "authenticated";
GRANT ALL ON FUNCTION "public"."addCoach"("fullname" "text", "password" "text", "email" "text", "team" bigint) TO "service_role";

GRANT ALL ON FUNCTION "public"."add_player"("fullname" "text", "password" "text", "email" "text", "team" integer, "phonenumber" "text") TO "anon";
GRANT ALL ON FUNCTION "public"."add_player"("fullname" "text", "password" "text", "email" "text", "team" integer, "phonenumber" "text") TO "authenticated";
GRANT ALL ON FUNCTION "public"."add_player"("fullname" "text", "password" "text", "email" "text", "team" integer, "phonenumber" "text") TO "service_role";

GRANT ALL ON FUNCTION "public"."addplayer"("fullname" character varying, "password" integer, "email" character varying, "team" integer) TO "anon";
GRANT ALL ON FUNCTION "public"."addplayer"("fullname" character varying, "password" integer, "email" character varying, "team" integer) TO "authenticated";
GRANT ALL ON FUNCTION "public"."addplayer"("fullname" character varying, "password" integer, "email" character varying, "team" integer) TO "service_role";

GRANT ALL ON FUNCTION "public"."getcoach"("id" bigint) TO "anon";
GRANT ALL ON FUNCTION "public"."getcoach"("id" bigint) TO "authenticated";
GRANT ALL ON FUNCTION "public"."getcoach"("id" bigint) TO "service_role";

GRANT ALL ON FUNCTION "public"."getcoaches"() TO "anon";
GRANT ALL ON FUNCTION "public"."getcoaches"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."getcoaches"() TO "service_role";

GRANT ALL ON FUNCTION "public"."getplayer"("id" bigint) TO "anon";
GRANT ALL ON FUNCTION "public"."getplayer"("id" bigint) TO "authenticated";
GRANT ALL ON FUNCTION "public"."getplayer"("id" bigint) TO "service_role";

GRANT ALL ON FUNCTION "public"."getplayers"() TO "anon";
GRANT ALL ON FUNCTION "public"."getplayers"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."getplayers"() TO "service_role";

GRANT ALL ON TABLE "public"."Coach" TO "anon";
GRANT ALL ON TABLE "public"."Coach" TO "authenticated";
GRANT ALL ON TABLE "public"."Coach" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Coach_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Coach_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Coach_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Player" TO "anon";
GRANT ALL ON TABLE "public"."Player" TO "authenticated";
GRANT ALL ON TABLE "public"."Player" TO "service_role";

GRANT ALL ON TABLE "public"."Team" TO "anon";
GRANT ALL ON TABLE "public"."Team" TO "authenticated";
GRANT ALL ON TABLE "public"."Team" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Team_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Team_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Team_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."reg_users_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."reg_users_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."reg_users_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
